#!/usr/bin/env python
# coding: utf-8


import csv
import json
import os.path

import networkx as nx
import pandas as pd


def graph_of_net(branch,bus,interconnect):
    """Create the graph for the HIFLD transmission network
    :param dict n_dict: dict of substation's neighbors as the edge inside the Graph
    :return: (*networkx.Graph*) -- Graph generated by networkx.
    """

    graph = nx.Graph()
    
    for bu in bus.iloc:

        if(bu['interconnect'] == interconnect):
            graph.add_node(bu['bus_id'])
    for br in branch.iloc:
        if(br['interconnect'] == interconnect):
            graph.add_edge(br['from_bus_id'], br['to_bus_id'])
    return graph

def get_max_island(graph):
    """Report the largest connected island to understand the topo nature of the graph

    :param networkx.Graph G: Graph generated by :func:`GraphOfNet`
    :return: (*list*) -- list of nodes inside the largest island.
    """

    return set(max(nx.connected_components(graph), key=len))

if __name__ == "__main__":
    buses = pd.read_csv("output/bus.csv")
    branches = pd.read_csv("output/branch.csv")

    inter = "Western"



    graph = graph_of_net(branches,buses,inter)
    max_island_set = get_max_island(graph)

    
    print("Island Detection: number of nodes in graph = ", len(graph.nodes))
    print("Island Detection: max island size = ", len(max_island_set))
    print(inter, " islands:")

    for islands in nx.connected_components(graph):
        print(len(islands))
        if len(islands) < 20:
            for node in islands:
                print(node)
